---

- name: DFS | Execute pre-checks
  include_tasks: pre_checks.yml

- name: Remove DFS Replication
  block:

    - name: DFS | Remove DFS replication groups
      win_dfs_replication_group:
        name: "{{ item.0.name }}/{{ item.1.name }}"
        state: absent
      with_subelements:
        - "{{ win_dfs_namespaces }}"
        - shares
      loop_control:
        label: "{{ item.0.name }}/{{ item.1.name }}"
      run_once: true
      ignore_errors: true # ignore error to continue when feature is not installed at all

    - name: DFS | Stop DFS Replication service
      win_service:
        name: DFSR
        state: stopped

    - name: DFS | Remove DFS Replication role
      win_feature:
        name: FS-DFS-Replication
        state: absent
  # end of block
  when: (ansible_play_hosts|length) > 1


- name: DFS | Remove DFSN folders
  win_dfs_namespace_folder:
    path: '\\{{ domain_name }}\{{ item.0.name }}\{{ item.1.name }}'
    state: absent
  with_subelements:
    - "{{ win_dfs_namespaces }}"
    - shares
  loop_control:
    label: "{{ item.1.name }}"
  run_once: true
  ignore_errors: true # ignore error to continue when feature is not installed at all

- name: DFS | Remove DFS namespaces
  win_dfs_namespace_root:
    path: '\\{{ domain_name }}\{{ item.name }}'
    state: absent
  loop: "{{ win_dfs_namespaces }}"
  loop_control:
    label: "{{ item.name }}"
  run_once: true
  ignore_errors: true # ignore error to continue when feature is not installed at all

- name: DFS | Stop DFS Namespace service
  win_service:
    name: Dfs
    state: stopped

- name: DFS | Remove DFS Namespace role
  win_feature:
    name: FS-DFS-Namespace
    state: absent

- name: DFS | Stop sharing directories
  win_share:
    name:  "{{ item.1.name }}"
    path:  "{{ item.0.root_path }}\\{{ item.1.name }}"
    state: absent
  with_subelements:
    - "{{ win_dfs_namespaces }}"
    - shares
  loop_control:
    label: "{{ item.0.root_path }}\\{{ item.1.name }}"

- name: DFS | Remove root directories from filesystem
  win_file:
    path: "{{ item.root_path }}\\{{ item.name }}"
    state: absent
  loop: "{{ win_dfs_namespaces }}"
  loop_control:
    label: "{{ item.root_path }}\\{{ item.name }}"

- name: DFS | Remove shared directories from filesystem
  win_file:
    path: "{{ item.0.root_path }}\\{{ item.1.name }}"
    state: absent
  with_subelements:
    - "{{ win_dfs_namespaces }}"
    - shares
  loop_control:
    label: "{{ item.0.root_path }}\\{{ item.1.name }}"
  when: win_dfs_remove_files | default(false)